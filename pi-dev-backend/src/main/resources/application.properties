spring.application.name=pi-dev-backend
spring.datasource.url=jdbc:mysql://mysql:3306/pidb?createDatabaseIfNotExist=true
spring.datasource.username=root
spring.datasource.password=root
#spring.jpa.show-sql=true
#spring.jpa.properties.hibernate.format_sql=true
mapbox.api.url=https://api.mapbox.com
mapbox.api.key=pk.eyJ1IjoibG91YXloMTEiLCJhIjoiY205cHFoejNqMGt6MjJqczRlN3JxYjl6aiJ9.r_vwTnPHgJfRZoE-YRKtNA
spring.jpa.hibernate.ddl-auto=update

# Activate the "dev" profile by default (you can override this with JVM arguments)
spring.profiles.active=dev

#web server
server.port=8090

#gemini configuration
gemini.api.key=AIzaSyCP2mUaWi6vkWuGpTu0-YoYBynj1FQjgyQ
gemini.api.keyliv=AIzaSyC9tcsQBgUvdHdiJoBufk_C9ZwSzygQ17Q
gemini.api.url=https://api.gemini.ai/v1/chat/completions
gemini.api.urlliv=https://generativelanguage.googleapis.com/v1beta/models/gemini-1.5-pro-latest:generateContent
gemini.model.name=gemini-1.5-pro-latest
server.servlet.context-path=/api/v1
gemini.apit.key=AIzaSyDLIFjXIHY--LPUjtrnwzv5N6HqCBe6U2Q

#JWT configuration
application.security.jwt.expiration=86400000
application.security.jwt.refresh-token.expiration=604800000

# Enable CORS
spring.mvc.cors.allowed-origins=*
spring.mvc.cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.mvc.cors.allowed-headers=*
spring.mvc.cors.allow-credentials=true

# Email configuration (password moved to profile-specific properties)
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=benhmida.molka01@gmail.com
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true
spring.mail.properties.mail.smtp.connectiontimeout=5000
spring.mail.properties.mail.smtp.timeout=3000
spring.mail.properties.mail.smtp.writetimeout=5000
logging.level.org.springframework.mail=DEBUG

# OAuth2 Client Configuration - credentials moved to profile-specific properties
# Only keeping the non-sensitive configuration here
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

spring.security.oauth2.client.registration.github.scope=user:email,read:user
spring.security.oauth2.client.registration.github.redirect-uri={baseUrl}/oauth2/callback/{registrationId}

# OAuth2 provider configuration
spring.security.oauth2.client.provider.github.authorization-uri=https://github.com/login/oauth/authorize
spring.security.oauth2.client.provider.github.token-uri=https://github.com/login/oauth/access_token
spring.security.oauth2.client.provider.github.user-info-uri=https://api.github.com/user

#Debug
logging.level.org.springframework.security=DEBUG

# File upload configuration
app.upload.dir=${user.dir}/src/main/resources/static/images
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# Twilio configuration
twilio.accountSid=ACb3b7541e32a43482b750e32b515aa76d
twilio.authToken=64e2a042f62d4eb55c761cd0d2247b5c
twilio.phoneNumber=+19182628540


# Cloudinary configuration
cloudinary.cloud_name=defrtig4s
cloudinary.api_key=365961664159548
cloudinary.api_secret=34tpl7AFlRqtDrDjAfGDUALCkcg

huggingface.api.url=https://api-inference.huggingface.co/models/facebook/bart-large-mnli
huggingface.api.key=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


#Stripe config
stripe.secretKey=sk_test_51RHkC5FStmPFMvRAlIB6dXteBIFhOFqMjn1wBTxftcrwT9P5JaPB4yzYW6dYYHpmP1xt3bIQPtNPoFuVqzHnpIXf006vumAyTI





#molka node maler
#spring.mail.host=smtp.gmail.com
#spring.mail.port=587
#spring.mail.username=benhmida.molka01@gmail.com
#spring.mail.password=lqlq gbkl eytg sqpn


#spring.mail.properties.mail.smtp.auth=true
#spring.mail.properties.mail.smtp.starttls.enable=true
#logging.level.org.springframework.mail=DEBUG
#spring.servlet.multipart.max-file-size=50MB
#spring.servlet.multipart.max-request-size=50MB

# Azure Face API Configuration
azure.face.endpoint=https://ageropulse.cognitiveservices.azure.com/
azure.face.recognition-model=recognition_04

